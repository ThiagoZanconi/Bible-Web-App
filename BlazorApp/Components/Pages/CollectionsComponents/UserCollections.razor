@using BlazorApp.Model
@using System.Net.Http.Headers
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="container">
    <div class="row row-cols row-cols-2-md row-cols-3-lg p-3 g-3">
        @foreach (var collection in collections)
        {
            <div class="col d-flex justify-content-between">
                <button class="border p-5 rounded-3 underline w-100 h-100">
                    @collection.name
                </button>
                <div class="d-flex gap-2">
                    <button class="btn btn-danger-hover d-flex align-items-center p-3 m-3" @onclick="() => DeleteCollection(collection)">
                        <img src="images/trash-can-icon.svg" width="16" height="16" alt="Eliminar">
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@code{
    [Inject] 
    private HttpClient Http { get; set; } = default!;

    [Parameter]
    public List<Collection> collections { get; set; } = new();

    private async void DeleteCollection(Collection collection)
    {
        bool deletedCollection = await DeleteCollection(collection.name);
        if(deletedCollection){
            collections.Remove(collection);
            StateHasChanged();
        } 
    }
    private async Task<bool> DeleteCollection(string name){
        var token = await localStorage.GetItemAsync<string>("jwtToken");
        if(token!=null){
            var request = new HttpRequestMessage(HttpMethod.Delete, "http://localhost:5120/api/collection/"+name);
            request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);

            var response = await Http.SendAsync(request);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Coleccion creada exitosamente");
                return true;
            }
            else
            {
                Console.WriteLine($"Error: {response.StatusCode}");
            }
        }
        StateHasChanged();
        return false;
    }
}